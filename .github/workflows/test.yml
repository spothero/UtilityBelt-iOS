name: Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  PACKAGE_NAME: UtilityBelt
  XCODEBUILD_WORKSPACE: UtilityBelt.xcworkspace
  XCODEBUILD_SCHEME: UtilityBelt
  DEVELOPER_DIR: /Applications/Xcode_11.4.1.app/Contents/Developer

jobs:
  iOS:
    name: iOS ${{ matrix.os }} ${{ matrix.device_name }}
    runs-on: macos-latest
    strategy:
      matrix:
        device_name: ["iPhone 11 Pro"]
        os: ["13.4.1"]
        # # The keys below are included as a one-off combination
        # include:
        #   - device_name: "Apple TV 4K"
        #     os: "latest"
    steps:
      - uses: actions/checkout@v2
      - name: Test ${{ matrix.destination }}
        run: sh ./scripts/build.sh "name=${{ matrix.device_name }},OS=${{ matrix.os }},platform=iOS Simulator"
      - name: Upload Xcodebuild Log
        uses: actions/upload-artifact@v1
        with:
          name: "iOS ${{ matrix.os }} {{ matrix.device_name }} Xcodebuild Log"
          path: "xcodebuild.log"
      - name: Upload Test Result
        uses: actions/upload-artifact@v1
        with:
          name: "iOS ${{ matrix.os }} {{ matrix.device_name }}.xcresult"
          path: "Test.xcresult"
        # run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -workspace "$XCODEBUILD_WORKSPACE" -scheme "$XCODEBUILD_SCHEME" -destination "name=${{ matrix.device_name }},OS=${{ matrix.os }},platform=iOS Simulator" clean test | xcpretty
  macOS:
    name: macOS
    runs-on: macos-latest
    env:
      XCODEBUILD_SCHEME: "UtilityBelt macOS"
    steps:
      - uses: actions/checkout@v2
      - name: Test ${{ matrix.destination }}
        run: sh ./scripts/build.sh "platform=macOS" # "-skip-testing:UtilityBeltDataTests,UtilityBeltKeychainTests"
      - name: Upload Xcodebuild Log
        uses: actions/upload-artifact@v1
        with:
          name: "macOS Xcodebuild Log"
          path: "xcodebuild.log"
      - name: Upload Test Result
        uses: actions/upload-artifact@v1
        with:
          name: "macOS.xcresult"
          path: "Test.xcresult"
  tvOS:
    name: tvOS ${{ matrix.os }} ${{ matrix.device_name }}
    runs-on: macos-latest
    strategy:
      matrix:
        device_name: ["Apple TV 4K"]
        os: ["13.4"]
    steps:
      - uses: actions/checkout@v2
      - name: Test ${{ matrix.destination }}
        run: sh ./scripts/build.sh "name=${{ matrix.device_name }},OS=${{ matrix.os }},platform=tvOS Simulator"
      - name: Upload Xcodebuild Log
        uses: actions/upload-artifact@v1
        with:
          name: "tvOS ${{ matrix.os }} {{ matrix.device_name }} Xcodebuild Log"
          path: "xcodebuild.log"
      - name: Upload Test Result
        uses: actions/upload-artifact@v1
        with:
          name: "tvOS ${{ matrix.os }} {{ matrix.device_name }}.xcresult"
          path: "Test.xcresult"
  # spm:
  #   name: Test with SPM
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: SPM Test
  #       run: swift test -c debug
