name: Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  PACKAGE_NAME: UtilityBelt
  XCODEBUILD_WORKSPACE: UtilityBelt.xcworkspace
  XCODEBUILD_SCHEME: UtilityBelt
  DEVELOPER_DIR: /Applications/Xcode_11.4.1.app/Contents/Developer
  # DEPLOY_DIRECTORY: deploy

jobs:
  iOS:
    name: iOS ${{ matrix.os }} ${{ matrix.device_name }}
    runs-on: macos-latest
    strategy:
      matrix:
        device_name: ["iPhone 11 Pro"]
        os: ["13.4.1"]
        # The keys below are included as a one-off combination
        include:
          - device_name: "iPhone XS"
            os: "12.4.1"
    steps:
      - uses: actions/checkout@v2
      - name: Run Tests for ${{ matrix.destination }}
        run: sh ./scripts/build.sh "name=${{ matrix.device_name }},OS=${{ matrix.os }},platform=iOS Simulator"
      - name: Upload Step Output
        uses: actions/upload-artifact@v1
        with:
          name: "iOS ${{ matrix.os }} ${{ matrix.device_name }} Output"
          path: "deploy"
        # run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -workspace "$XCODEBUILD_WORKSPACE" -scheme "$XCODEBUILD_SCHEME" -destination "name=${{ matrix.device_name }},OS=${{ matrix.os }},platform=iOS Simulator" clean test | xcpretty
  macOS:
    name: macOS
    runs-on: macos-latest
    env:
      XCODEBUILD_SCHEME: "UtilityBelt macOS"
    steps:
      - uses: actions/checkout@v2
      - name: Run Tests for ${{ matrix.destination }}
        run: sh ./scripts/build.sh "platform=macOS" # "-skip-testing:UtilityBeltDataTests,UtilityBeltKeychainTests"
      - name: Upload Step Output
        uses: actions/upload-artifact@v1
        with:
          name: "macOS Output"
          path: "deploy"
  tvOS:
    name: tvOS ${{ matrix.os }} ${{ matrix.device_name }}
    runs-on: macos-latest
    strategy:
      matrix:
        device_name: ["Apple TV 4K"]
        os: ["13.4"]
    steps:
      - uses: actions/checkout@v2
      - name: Run Tests for ${{ matrix.destination }}
        run: sh ./scripts/build.sh "name=${{ matrix.device_name }},OS=${{ matrix.os }},platform=tvOS Simulator"
      - name: Upload Step Output
        uses: actions/upload-artifact@v1
        with:
          name: "tvOS ${{ matrix.os }} ${{ matrix.device_name }} Output"
          path: "deploy"
  spm:
    name: SPM
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Tests
        run: |
          mkdir deploy
          swift test -c debug --enable-test-discovery --enable-code-coverage
      - name: Upload Step Output
        uses: actions/upload-artifact@v1
        with:
          name: "SPM Output"
          path: "deploy"
          # swift test --show-codecov-path
