name: UtilityBelt CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  PACKAGE_NAME: UtilityBelt
  XCODEBUILD_WORKSPACE: UtilityBelt.xcworkspace
  XCODEBUILD_SCHEME: UtilityBelt
  DEVELOPER_DIR: /Applications/Xcode_11.4.1.app/Contents/Developer
  DEPLOY_DIRECTORY: deploy

jobs:
  iOS:
    name: iOS ${{ matrix.os }} ${{ matrix.device_name }}
    runs-on: macos-latest
    strategy:
      matrix:
        device_name:
          [
            "iPhone 11 Pro",
            "iPhone SE (2nd generation)",
            "iPad Pro (11-inch) (2nd generation)",
          ]
        os: [13.4.1]
        xcode_version: [11.4.1]
        # The keys below are included as a one-off combination
        # include:
        #   - device_name: "iPhone SE (2nd generation)"
        #     os: 13.4.1
        #     xcode_version: 11.4.1
    env:
      # Only Xcode 11.x and higher can run this project due to Swift Package Manager integration
      # This means that we cannot test versions below iOS 13, tvOS 13, etc. specifically
      DEVELOPER_DIR: "/Applications/Xcode_${{ matrix.xcode_version }}.app/Contents/Developer"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Tests
        run: sh ./scripts/xcode_build.sh "name=${{ matrix.device_name }},OS=${{ matrix.os }},platform=iOS Simulator"
      - name: Upload Step Output
        uses: actions/upload-artifact@v1
        with:
          name: "iOS ${{ matrix.os }} ${{ matrix.device_name }} Output"
          path: ${{ env.DEPLOY_DIRECTORY }}
  macOS:
    name: macOS
    runs-on: macos-latest
    env:
      XCODEBUILD_SCHEME: "UtilityBelt macOS"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Tests
        run: sh ./scripts/xcode_build.sh "platform=macOS" # "-skip-testing:UtilityBeltDataTests,UtilityBeltKeychainTests"
      - name: Upload Step Output
        uses: actions/upload-artifact@v1
        with:
          name: "macOS Output"
          path: ${{ env.DEPLOY_DIRECTORY }}
  macOS_catalyst:
    name: macOS Catalyst
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Tests
        run: sh ./scripts/xcode_build.sh "platform=macOS" # "-skip-testing:UtilityBeltDataTests,UtilityBeltKeychainTests"
      - name: Upload Step Output
        uses: actions/upload-artifact@v1
        with:
          name: "macOS Catalyst Output"
          path: ${{ env.DEPLOY_DIRECTORY }}
  tvOS:
    name: tvOS ${{ matrix.os }} ${{ matrix.device_name }}
    runs-on: macos-latest
    strategy:
      matrix:
        device_name: ["Apple TV 4K"]
        os: [13.4]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Tests
        run: sh ./scripts/xcode_build.sh "name=${{ matrix.device_name }},OS=${{ matrix.os }},platform=tvOS Simulator"
      - name: Upload Step Output
        uses: actions/upload-artifact@v1
        with:
          name: "tvOS ${{ matrix.os }} ${{ matrix.device_name }} Output"
          path: ${{ env.DEPLOY_DIRECTORY }}
  spm:
    name: SPM
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Tests
        run: sh ./scripts/swift_build.sh
      - name: Upload Step Output
        uses: actions/upload-artifact@v1
        with:
          name: "SPM Output"
          path: ${{ env.DEPLOY_DIRECTORY }}
